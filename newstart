#include "cnclt.h"

#include <Servo.h>
/*
 * working with images opencv
 * working with steps. 
 */


/*
 * every joints are workiing with digital switch
 * when before start working, checking all digital switchs to initialize
 * stepping position. 
 * must install 3 switch. horizontal moving, tilting moving, rotation moving
 */

/*
 * stepping must setting same direction to initialize
 */

 /*
  * Serial on -> setting same direction stepper
  * while all switch value is high working with same spped
  */
enum {
  sumstep = 3, //horizont, tilt, rotation
  sumEndSwitch = 3,
  Endchar = 127
};

struct endSwitch {
};

struct pts {
  int stepCount; //how many steps are working
  unsigned int pinWorkCount; // ( 0 == is no working)
};

struct endSwitch endSwitch;
struct pts pts[sumstep];

cnclt mycnclt(100);

const int endPin[sumEndSwitch] = {43, 44, 45};
const int ENA[sumstep] = {4, 5, 6};
const int DIR[sumstep] = {7, 8, 9};
const int STEP[sumstep] = {10, 11, 12};

int endPinCount;

char ch;

int i;
int count;

void setup() {
  Serial.begin (19200);
  for (i = 0; i < 3; i++) {
    pinMode(endPin[i], INPUT);
    pts[i].pinWorkCount = 0;
  }
}


void loop() {
  //count = mycnclt.endSwitchStatus(100, endPin[1]);
  /*
   * for (i = 0; i < sumstep; i++) {
   * mycnclt.endSwitchChecker(step, dir, endpin[i])
   */
  if (Serial.available()) {
    ch = Serial.read();
    if (ch >= Endchar) {
    }
  }
}


/*
 if (sumEndSwitch() == maxpins) {
 
 } else if (sumEndSwitch() != maxpins) {
 }
 */

 /*
int SwitchCount() {
  endPinCount = 0;
  for (i = 0; i < sumEndSwitch; i++) {
    if (digitalRead(endPin[i]) == 1) {
      endPinCount++;
    }
  }
  return endPinCount;
}
*/

int stepWorker(int remainWorkCount) {
  for (i = 0; i < sumstep; i++) {
    if (pts[i].pinWorkCount > 0) {
      pts[i].pinWorkCount = mycnclt.stepWorkPosition(endPin[i], STEP[i], pts[i].pinWorkCount);
    } else if (pts[i].pinWorkCount == 0) {
      Serial.print ("step");
      Serial.print (i);
      Serial.println ("_resting");
    }
  }
  return (remainWorkCount - 1);
}


void homePosition() {
  for (i = 0; i < sumstep; i++) {
    pts[i].stepCount = mycnclt.endSwitchChecker(DIR[i], STEP[i], endPin[i]);
  }
}
